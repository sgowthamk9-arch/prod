<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>63.0</apiVersion>
    <assignments>
        <name>Assignment_of_Profile_Id_into_List</name>
        <label>Assignment of Profile Id into List</label>
        <locationX>138</locationX>
        <locationY>708</locationY>
        <assignmentItems>
            <assignToReference>IdOfProfile</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>loop_On_Profile_records.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>loop_On_Profile_records</targetReference>
        </connector>
    </assignments>
    <customErrors>
        <name>Throw_exception</name>
        <label>Throw exception</label>
        <locationX>1106</locationX>
        <locationY>492</locationY>
        <customErrorMessages>
            <errorMessage>{!$Flow.FaultMessage}</errorMessage>
            <isFieldError>false</isFieldError>
        </customErrorMessages>
    </customErrors>
    <decisions>
        <name>Check_Is_your_Contact_Record_Type_Is_Staff_or_not</name>
        <label>Check Is your Contact Record Type Is Staff or not?</label>
        <locationX>710</locationX>
        <locationY>276</locationY>
        <defaultConnectorLabel>Record Type Other than Client Contact</defaultConnectorLabel>
        <rules>
            <name>Is_Record_Type_Staff</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Staff</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.SobjectType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Contact</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_UserLicense_Records</targetReference>
            </connector>
            <label>Is Record Type Staff?</label>
        </rules>
    </decisions>
    <description>This flow updates the related User record when the User License is Salesforce.</description>
    <environments>Default</environments>
    <formulas>
        <name>isNew</name>
        <dataType>Boolean</dataType>
        <expression>isNew()</expression>
    </formulas>
    <interviewLabel>Contact_AI_AU_UpdateUserRecordforStaffRecordType {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Contact_AI_AU_UpdateUserRecordforStaffRecordType</label>
    <loops>
        <name>loop_On_Profile_records</name>
        <label>loop On Profile records</label>
        <locationX>50</locationX>
        <locationY>600</locationY>
        <collectionReference>Get_Profile_Records</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assignment_of_Profile_Id_into_List</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Get_User_record</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Profile_Records</name>
        <label>Get Profile Records</label>
        <locationX>50</locationX>
        <locationY>492</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>loop_On_Profile_records</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Throw_exception</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>UserLicenseId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>IdOfUserLicense</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Profile</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_User_record</name>
        <label>Get User record</label>
        <locationX>50</locationX>
        <locationY>900</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_user_record</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Throw_exception</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Email</elementReference>
            </value>
        </filters>
        <filters>
            <field>ProfileId</field>
            <operator>In</operator>
            <value>
                <elementReference>IdOfProfile</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_UserLicense_Records</name>
        <label>Get UserLicense Records</label>
        <locationX>50</locationX>
        <locationY>384</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Profile_Records</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Throw_exception</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Salesforce</stringValue>
            </value>
        </filters>
        <object>UserLicense</object>
        <outputAssignments>
            <assignToReference>IdOfUserLicense</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordUpdates>
        <name>Update_user_record</name>
        <label>Update user record</label>
        <locationX>50</locationX>
        <locationY>1008</locationY>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Throw_exception</targetReference>
        </faultConnector>
        <filterLogic>1 AND (2 OR 3 OR 4 OR 5 OR 6 OR 7 OR 8 OR 9 OR 10 OR 11 OR 12 OR 13  )</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_User_record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Title</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Title</elementReference>
            </value>
        </filters>
        <filters>
            <field>Phone</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Phone</elementReference>
            </value>
        </filters>
        <filters>
            <field>MobilePhone</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.MobilePhone</elementReference>
            </value>
        </filters>
        <filters>
            <field>City</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.MailingCity</elementReference>
            </value>
        </filters>
        <filters>
            <field>Country</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.MailingCountry</elementReference>
            </value>
        </filters>
        <filters>
            <field>CountryCode</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.MailingCountryCode</elementReference>
            </value>
        </filters>
        <filters>
            <field>PostalCode</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.MailingPostalCode</elementReference>
            </value>
        </filters>
        <filters>
            <field>State</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.MailingState</elementReference>
            </value>
        </filters>
        <filters>
            <field>StateCode</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.MailingStateCode</elementReference>
            </value>
        </filters>
        <filters>
            <field>Street</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.MailingStreet</elementReference>
            </value>
        </filters>
        <filters>
            <field>GeocodeAccuracy</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.MailingGeocodeAccuracy</elementReference>
            </value>
        </filters>
        <filters>
            <field>Staff_Level__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Staff_Level__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>City</field>
            <value>
                <elementReference>$Record.MailingCity</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Country</field>
            <value>
                <elementReference>$Record.MailingCountry</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>CountryCode</field>
            <value>
                <elementReference>$Record.MailingCountryCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>GeocodeAccuracy</field>
            <value>
                <elementReference>$Record.MailingGeocodeAccuracy</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MobilePhone</field>
            <value>
                <elementReference>$Record.MobilePhone</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Phone</field>
            <value>
                <elementReference>$Record.Phone</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PostalCode</field>
            <value>
                <elementReference>$Record.MailingPostalCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Staff_Level__c</field>
            <value>
                <elementReference>$Record.Staff_Level__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>State</field>
            <value>
                <elementReference>$Record.MailingState</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>StateCode</field>
            <value>
                <elementReference>$Record.MailingStateCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Street</field>
            <value>
                <elementReference>$Record.MailingStreet</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Title</field>
            <value>
                <elementReference>$Record.Title</elementReference>
            </value>
        </inputAssignments>
        <object>User</object>
    </recordUpdates>
    <start>
        <locationX>78</locationX>
        <locationY>0</locationY>
        <filterLogic>(1 AND 2 AND 15) AND (3 OR 4 OR 5 OR 6 OR 7 OR 8 OR 9 OR 10 OR 11 OR 12 OR 13 OR 14)</filterLogic>
        <filters>
            <field>Email</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Email</field>
            <operator>NotEqualTo</operator>
        </filters>
        <filters>
            <field>MailingCountry</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>MailingCountryCode</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>MailingGeocodeAccuracy</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>MailingStateCode</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>MailingState</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>MailingCity</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>MailingPostalCode</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>MailingStreet</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Staff_Level__c</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Title</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>MobilePhone</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Phone</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>User__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>Contact</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <scheduledPaths>
            <connector>
                <targetReference>Check_Is_your_Contact_Record_Type_Is_Staff_or_not</targetReference>
            </connector>
            <pathType>AsyncAfterCommit</pathType>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>IdOfProfile</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>IdOfUpdatedUserRecord</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>IdOfUserLicense</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
