<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>63.0</apiVersion>
    <customErrors>
        <name>Throw_Exception</name>
        <label>Throw Exception</label>
        <locationX>314</locationX>
        <locationY>924</locationY>
        <customErrorMessages>
            <errorMessage>{!$Flow.FaultMessage}</errorMessage>
            <isFieldError>false</isFieldError>
        </customErrorMessages>
    </customErrors>
    <decisions>
        <name>Check_User_is_Active_or_Not</name>
        <label>Check User is Active or Not</label>
        <locationX>314</locationX>
        <locationY>708</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_Active</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_related_Contact</targetReference>
            </connector>
            <label>Is Active?</label>
        </rules>
    </decisions>
    <decisions>
        <name>Decision_To_check_Record_Type</name>
        <label>Decision To check Record Type</label>
        <locationX>578</locationX>
        <locationY>600</locationY>
        <defaultConnectorLabel>Default</defaultConnectorLabel>
        <rules>
            <name>Is_Record_Type_Staff</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Get_Contact_Rec</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Contact_Rec</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_User_is_Active_or_Not</targetReference>
            </connector>
            <label>Is Record Type Staff?</label>
        </rules>
    </decisions>
    <decisions>
        <name>Decision_to_check_User_License</name>
        <label>Decision  to check User License</label>
        <locationX>1106</locationX>
        <locationY>276</locationY>
        <defaultConnectorLabel>User License doesn&apos;t exist</defaultConnectorLabel>
        <rules>
            <name>Is_User_Licence_Exist</name>
            <conditionLogic>1 AND 4 AND 3 AND (2 OR 5)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Profile.UserLicense.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Salesforce</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Email</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Email</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Staff_Record_Type</targetReference>
            </connector>
            <label>Is User Licence Exist?</label>
        </rules>
    </decisions>
    <description>Update Related Contact Where Contact is Staff Record Type</description>
    <environments>Default</environments>
    <formulas>
        <name>isNew</name>
        <dataType>Boolean</dataType>
        <expression>isNew()</expression>
    </formulas>
    <formulas>
        <name>IsnewCreatedRec</name>
        <dataType>Boolean</dataType>
        <expression>IF(NOW() &gt; {!$Record.CreatedDate}+ (1/24/60), TRUE, FALSE)</expression>
    </formulas>
    <interviewLabel>User_AI_AU_UpdateRelContactRecords {!$Flow.CurrentDateTime}</interviewLabel>
    <label>User_AI_AU_UpdateRelContactRecords</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Contact_Rec</name>
        <label>Get Contact Rec</label>
        <locationX>578</locationX>
        <locationY>492</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Decision_To_check_Record_Type</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Throw_Exception</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Email</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Staff_Record_Type.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Staff_Record_Type</name>
        <label>Get Staff Record Type</label>
        <locationX>578</locationX>
        <locationY>384</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Contact_Rec</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Throw_Exception</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Contact</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Staff</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_related_Contact</name>
        <label>Update related Contact</label>
        <locationX>50</locationX>
        <locationY>816</locationY>
        <faultConnector>
            <targetReference>Throw_Exception</targetReference>
        </faultConnector>
        <filterLogic>1  AND  (2 OR 3 OR 4 OR 5 OR 6 OR 7 OR 8 OR 9 OR 10 OR 11 OR 12 OR 13 OR 14 OR 15 OR 16)</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Contact_Rec.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>User__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>FirstName</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.FirstName</elementReference>
            </value>
        </filters>
        <filters>
            <field>LastName</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.LastName</elementReference>
            </value>
        </filters>
        <filters>
            <field>MiddleName</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.MiddleName</elementReference>
            </value>
        </filters>
        <filters>
            <field>Preferred_Name__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Preferred_Name__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>MailingCity</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.City</elementReference>
            </value>
        </filters>
        <filters>
            <field>MailingCountry</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Country</elementReference>
            </value>
        </filters>
        <filters>
            <field>MailingCountryCode</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.CountryCode</elementReference>
            </value>
        </filters>
        <filters>
            <field>MailingPostalCode</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.PostalCode</elementReference>
            </value>
        </filters>
        <filters>
            <field>MailingState</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.State</elementReference>
            </value>
        </filters>
        <filters>
            <field>MailingStateCode</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.StateCode</elementReference>
            </value>
        </filters>
        <filters>
            <field>MailingStreet</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Street</elementReference>
            </value>
        </filters>
        <filters>
            <field>MobilePhone</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.MobilePhone</elementReference>
            </value>
        </filters>
        <filters>
            <field>Phone</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Phone</elementReference>
            </value>
        </filters>
        <filters>
            <field>Title</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Title</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>MailingCity</field>
            <value>
                <elementReference>$Record.City</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MailingCountry</field>
            <value>
                <elementReference>$Record.Country</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MailingCountryCode</field>
            <value>
                <elementReference>$Record.CountryCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MailingPostalCode</field>
            <value>
                <elementReference>$Record.PostalCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MailingState</field>
            <value>
                <elementReference>$Record.State</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MailingStateCode</field>
            <value>
                <elementReference>$Record.StateCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MailingStreet</field>
            <value>
                <elementReference>$Record.Street</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MiddleName</field>
            <value>
                <elementReference>$Record.MiddleName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MobilePhone</field>
            <value>
                <elementReference>$Record.MobilePhone</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Phone</field>
            <value>
                <elementReference>$Record.Phone</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Preferred_Name__c</field>
            <value>
                <elementReference>$Record.Preferred_Name__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Title</field>
            <value>
                <elementReference>$Record.Title</elementReference>
            </value>
        </inputAssignments>
        <object>Contact</object>
    </recordUpdates>
    <start>
        <locationX>320</locationX>
        <locationY>0</locationY>
        <object>User</object>
        <recordTriggerType>Update</recordTriggerType>
        <scheduledPaths>
            <name>Schedule_Path_on_User_Creation</name>
            <connector>
                <targetReference>Decision_to_check_User_License</targetReference>
            </connector>
            <label>Schedule Path on User Creation</label>
            <offsetNumber>1</offsetNumber>
            <offsetUnit>Minutes</offsetUnit>
            <recordField>LastModifiedDate</recordField>
            <timeSource>RecordField</timeSource>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>IdOfProfile</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>IdOfUserLicense</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>listofContactRecords</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Contact</objectType>
    </variables>
</Flow>
