<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Add_Log_Entry</name>
        <label>Add Log Entry</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <actionName>FlowLogEntry</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Save_Log</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>flowName</name>
            <value>
                <stringValue>Account_AI_AU_ClientAccountShareWithPartnerFirm</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>loggingLevelName</name>
            <value>
                <stringValue>WARN</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>message</name>
            <value>
                <stringValue>We’re unable to retrieve the requested record. It may have been deleted, you might not have access to view it, or an unexpected error occurred. Please try again later or contact your system administrator if the issue continues.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>saveLog</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>FlowLogEntry</nameSegment>
        <offset>0</offset>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <actionCalls>
        <name>Add_Log_Entry_01</name>
        <label>Add Log Entry</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <actionName>FlowLogEntry</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Save_Log_01</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>flowName</name>
            <value>
                <stringValue>Account_AI_AU_ClientAccountShareWithPartnerFirm</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>loggingLevelName</name>
            <value>
                <stringValue>WARN</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>message</name>
            <value>
                <stringValue>Sorry! We couldn’t save your changes right now. Please check your details and try again.&quot;</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>saveLog</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>FlowLogEntry</nameSegment>
        <offset>0</offset>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <actionCalls>
        <name>Add_Log_Entry_02</name>
        <label>Add Log Entry</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <actionName>FlowLogEntry</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Save_log_02</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>flowName</name>
            <value>
                <stringValue>Account_AI_AU_ClientAccountShareWithPartnerFirm</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>loggingLevelName</name>
            <value>
                <stringValue>WARN</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>message</name>
            <value>
                <stringValue>Record deletion failed. Please check if the record is in use or contact your administrator.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>saveLog</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>FlowLogEntry</nameSegment>
        <offset>0</offset>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <actionCalls>
        <name>Save_Log</name>
        <label>Save Log</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <actionName>Logger</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Throw_Exception</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <nameSegment>Logger</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <actionCalls>
        <name>Save_Log_01</name>
        <label>Save Log</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <actionName>Logger</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Throw_Exception_01</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <nameSegment>Logger</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <actionCalls>
        <name>Save_log_02</name>
        <label>Save log</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <actionName>Logger</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Throw_Exception_02</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <nameSegment>Logger</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <apiVersion>64.0</apiVersion>
    <customErrors>
        <name>Throw_Exception</name>
        <label>Throw Exception</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <customErrorMessages>
            <errorMessage>We’re unable to retrieve the requested record. It may have been deleted, you might not have access to view it, or an unexpected error occurred. Please try again later or contact your system administrator if the issue continues.</errorMessage>
            <isFieldError>false</isFieldError>
        </customErrorMessages>
    </customErrors>
    <customErrors>
        <name>Throw_Exception_01</name>
        <label>Throw Exception</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <customErrorMessages>
            <errorMessage>Sorry! We couldn’t save your changes right now. Please check your details and try again.&quot;</errorMessage>
            <isFieldError>false</isFieldError>
        </customErrorMessages>
    </customErrors>
    <customErrors>
        <name>Throw_Exception_02</name>
        <label>Throw Exception</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <customErrorMessages>
            <errorMessage>Record deletion failed. Please check if the record is in use or contact your administrator.</errorMessage>
            <isFieldError>false</isFieldError>
        </customErrorMessages>
    </customErrors>
    <decisions>
        <name>Decision_to_check_Account_share_record_exist_or_not</name>
        <label>Decision to check Account share record exist or not?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>Create_Accountshare_01</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Doesn&apos;t Exist</defaultConnectorLabel>
        <rules>
            <name>Is_Exist_Accountshare</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Get_Accountshare_Record</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Accountshare_Record</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <label>Is Exist Accountshare?</label>
        </rules>
    </decisions>
    <decisions>
        <name>Decision_to_check_Accountshare_Record_Exist_or_Not</name>
        <label>Decision to check Accountshare Record Exist or Not</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>Create_Accountshare</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Doesn&apos;t Exist</defaultConnectorLabel>
        <rules>
            <name>Is_Exist</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Get_Accountshare</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Accountshare</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Delete_Accountshare</targetReference>
            </connector>
            <label>Is Exist?</label>
        </rules>
    </decisions>
    <decisions>
        <name>Decision_to_check_Partner_Account_field</name>
        <label>Decision to check Partner Account field</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>Get_Accountshare_Record</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Reamins same</defaultConnectorLabel>
        <rules>
            <name>Client_Account_record_not_found</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Get_Client_Account_Record</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Client_Account_Record</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Client Account record not found</label>
        </rules>
        <rules>
            <name>Is_changed</name>
            <conditionLogic>(1 OR 2 ) AND 3</conditionLogic>
            <conditions>
                <leftValueReference>Get_Client_Account_Record</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Client_Account_Record</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Partner_Account__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Accountshare</targetReference>
            </connector>
            <label>Is changed?</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Automation_Enabled</name>
        <label>Is Automation Enabled</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_AutomationEnabled</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_DisableAutomation.IsActiveFlow__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Record_Type</targetReference>
            </connector>
            <label>Yes_AutomationEnabled</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Account_AI_AU_ {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Account_AI_AU_ClientAccountShareWithPartnerFirm</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_Accountshare</name>
        <label>Create Accountshare</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <faultConnector>
            <targetReference>Add_Log_Entry_01</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>AccountAccessLevel</field>
            <value>
                <stringValue>Read</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OpportunityAccessLevel</field>
            <value>
                <stringValue>Read</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RowCause</field>
            <value>
                <stringValue>Manual</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>$Record.Partner_Account__r.RelatedGroupId__c</elementReference>
            </value>
        </inputAssignments>
        <object>AccountShare</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Accountshare_01</name>
        <label>Create Accountshare</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Throw_Exception_01</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>AccountAccessLevel</field>
            <value>
                <stringValue>Read</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OpportunityAccessLevel</field>
            <value>
                <stringValue>Read</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RowCause</field>
            <value>
                <stringValue>Manual</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>$Record.Partner_Account__r.RelatedGroupId__c</elementReference>
            </value>
        </inputAssignments>
        <object>AccountShare</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordDeletes>
        <name>Delete_Accountshare</name>
        <label>Delete Accountshare</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Create_Accountshare</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Add_Log_Entry_02</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Accountshare.Id</elementReference>
            </value>
        </filters>
        <object>AccountShare</object>
    </recordDeletes>
    <recordLookups>
        <name>Get_Accountshare</name>
        <label>Get Accountshare</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Decision_to_check_Accountshare_Record_Exist_or_Not</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Throw_Exception</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record__Prior.Partner_Account__r.RelatedGroupId__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>AccountShare</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Accountshare_Record</name>
        <label>Get Accountshare Record</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Decision_to_check_Account_share_record_exist_or_not</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Throw_Exception</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Partner_Account__r.RelatedGroupId__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>AccountShare</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Client_Account_Record</name>
        <label>Get Client Account Record</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Decision_to_check_Partner_Account_field</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Throw_Exception</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Record_Type.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Partner_Account__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_DisableAutomation</name>
        <label>Get DisableAutomation</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_Automation_Enabled</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Add_Log_Entry</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>APIObjectName__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Account</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>DisableAutomation__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Record_Type</name>
        <label>Get Record Type</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Client_Account_Record</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Throw_Exception</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Account</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Client</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_DisableAutomation</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Partner_Account__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Partner_Account__c</field>
            <operator>NotEqualTo</operator>
        </filters>
        <filters>
            <field>Partner_Account__c</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Account</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
