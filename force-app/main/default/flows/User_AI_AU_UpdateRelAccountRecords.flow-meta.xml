<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>62.0</apiVersion>
    <customErrors>
        <name>Throw_exception</name>
        <label>Throw_exception</label>
        <locationX>1898</locationX>
        <locationY>1032</locationY>
        <customErrorMessages>
            <errorMessage>{!$Flow.FaultMessage}</errorMessage>
            <isFieldError>false</isFieldError>
        </customErrorMessages>
    </customErrors>
    <decisions>
        <description>Decision to Check Profile of Triggering User.</description>
        <name>Check_Is_User_is_Portal_User_or_Not</name>
        <label>Check Is User is Portal User or Not</label>
        <locationX>2096</locationX>
        <locationY>384</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>User_is_Active_User</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Profile.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Client Portal</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Contact_Record</targetReference>
            </connector>
            <label>User is Client Portal User?</label>
        </rules>
        <rules>
            <name>User_is_Assignee_Portal</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Profile.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Assignee Portal</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Record_Type</targetReference>
            </connector>
            <label>User is Assignee Portal?</label>
        </rules>
    </decisions>
    <decisions>
        <description>This decision is used to determine the record type.</description>
        <name>check_record_type</name>
        <label>check record type</label>
        <locationX>941</locationX>
        <locationY>276</locationY>
        <defaultConnector>
            <targetReference>Check_Is_User_is_Portal_User_or_Not</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Other than Staff RT</defaultConnectorLabel>
        <rules>
            <name>Exist_RT</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Contact.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Staff</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Contact.RecordType.SobjectType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Contact</stringValue>
                </rightValue>
            </conditions>
            <label>Is Staff RT?</label>
        </rules>
    </decisions>
    <decisions>
        <name>Decision_to_check_Account_exist_or_not</name>
        <label>Decision to check Account exist or not?</label>
        <locationX>1634</locationX>
        <locationY>1548</locationY>
        <defaultConnector>
            <targetReference>Create_New_Spouse_Account</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Account Doesn&apos;t exist</defaultConnectorLabel>
        <rules>
            <name>Only_email_change</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Account.Spouse_Email__pc</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Account.Spouse__pr.Primary_Email__pc</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>update_record_while_Email_Change</targetReference>
            </connector>
            <label>While email change</label>
        </rules>
        <rules>
            <name>If_spouse_details_doen_t_exist</name>
            <conditionLogic>(1 OR 2) AND (3 OR 4) AND (5 OR 6) AND (7 OR 8) AND (9 OR 10)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Spouse_First_Name__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Spouse_First_Name__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Spouse_Last_Name__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Spouse_Last_Name__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Spouse_Email__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Spouse_Email__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Spouse_Preferred_Name__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Spouse_Preferred_Name__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Spouse_Phone__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Spouse_Phone__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>If spouse details doen&apos;t exist</label>
        </rules>
        <rules>
            <name>Is_account_exist_with_same_Email</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Account_record_with_Same_Email</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Account_record_with_Same_Email</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_account_record</targetReference>
            </connector>
            <label>Is account exist with same Email?</label>
        </rules>
    </decisions>
    <decisions>
        <description>Decision  to Check triggering User Updates or not.</description>
        <name>Decision_to_check_Prior_or_new_value</name>
        <label>Decision to check Prior or new value</label>
        <locationX>1634</locationX>
        <locationY>708</locationY>
        <defaultConnector>
            <targetReference>Get_Account_record_with_Same_Email</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_new_Value</name>
            <conditionLogic>(16 OR 17) AND (1 OR 2 OR 3 OR 4 OR 5 OR 6 OR 7 OR 8 OR 9 OR  10 OR  11 OR  12 OR  13 OR  14 OR  15 OR 18 )</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Country</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Account.BillingCountry</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.CountryCode</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Account.BillingCountryCode</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.PostalCode</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Account.BillingPostalCode</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.State</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Account.BillingState</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.StateCode</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Account.BillingStateCode</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Street</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Account.BillingStreet</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Phone</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Account.Phone</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.MobilePhone</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Account.PersonMobilePhone</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Title</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Account.PersonTitle</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Preferred_Name__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Account.Preferred_Name__pc</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Spouse_Email__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Account.Spouse_Email__pc</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Spouse_First_Name__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Account.Spouse_First_Name__pc</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Spouse_Last_Name__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Account.Spouse_Last_Name__pc</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Spouse_Phone__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Account.Spouse_Phone__pc</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Spouse_Preferred_Name__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Account.Spouse_Preferred_Name__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Account</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Account</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.City</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Account.BillingCity</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Decision_to_check_spouse</targetReference>
            </connector>
            <label>Is new Value?</label>
        </rules>
    </decisions>
    <decisions>
        <description>Decision to Check Spouse.</description>
        <name>Decision_to_check_spouse</name>
        <label>Decision to check spouse</label>
        <locationX>1106</locationX>
        <locationY>816</locationY>
        <defaultConnector>
            <targetReference>Update_Account</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Spouse doesn&apos;t exist</defaultConnectorLabel>
        <rules>
            <name>Is_preferred_name_exist</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Preferred_Name__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Preferred_Name__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Preferred_Name__c</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <connector>
                <targetReference>Update_Account_on_preferred_Name_cond</targetReference>
            </connector>
            <label>Is preferred name exist</label>
        </rules>
        <rules>
            <name>Is_spouse_exist</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Account.Spouse__pr.Spouse__pc</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Account.Spouse__pc</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Account_on_Spouse_cond</targetReference>
            </connector>
            <label>Is spouse exist?</label>
        </rules>
    </decisions>
    <description>This flow is used to update related Account and Contact records based on specific conditions for Assignee and Client Portal users.</description>
    <environments>Default</environments>
    <formulas>
        <name>isNew</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <formulas>
        <name>IsnewCreatedRec</name>
        <dataType>Boolean</dataType>
        <expression>IF(NOW() &gt; {!$Record.CreatedDate}+ (1/24/60), TRUE, FALSE)</expression>
    </formulas>
    <interviewLabel>User AI AU UpdateRelAccountRec {!$Flow.CurrentDateTime}</interviewLabel>
    <label>User AI AU UpdateRelAccountRecords</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_New_Spouse_Account</name>
        <label>Create New Spouse Account</label>
        <locationX>2294</locationX>
        <locationY>1656</locationY>
        <assignRecordIdToReference>New_Spouse_Account_ID</assignRecordIdToReference>
        <connector>
            <targetReference>Update_Assignee_with_Spouse_ID</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Throw_exception</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>FirstName</field>
            <value>
                <elementReference>$Record.Spouse_First_Name__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>IsMarried__pc</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>LastName</field>
            <value>
                <elementReference>$Record.Spouse_Last_Name__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.Account.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Phone</field>
            <value>
                <elementReference>$Record.Spouse_Phone__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Preferred_Name__pc</field>
            <value>
                <elementReference>$Record.Spouse_Preferred_Name__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Primary_Email__pc</field>
            <value>
                <elementReference>$Record.Spouse_Email__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>Get_Record_Type.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordCreates>
    <recordLookups>
        <description>Get Account Record on  basis of Specific Condition.</description>
        <name>Account</name>
        <label>Account</label>
        <locationX>1634</locationX>
        <locationY>600</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Decision_to_check_Prior_or_new_value</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Throw_exception</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsPersonAccount</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Record_Type.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Account_record_with_Same_Email</name>
        <label>Get Account record with Same Email</label>
        <locationX>1634</locationX>
        <locationY>1440</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Decision_to_check_Account_exist_or_not</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Throw_exception</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Primary_Email__pc</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Spouse_Email__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsPersonAccount</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get Individual Record Type.</description>
        <name>Get_Record_Type</name>
        <label>Get Record Type</label>
        <locationX>1634</locationX>
        <locationY>492</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Account</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Throw_exception</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Individual</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Access_Consent_record</name>
        <label>Update Access Consent record</label>
        <locationX>1634</locationX>
        <locationY>2004</locationY>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Throw_exception</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Individual__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Access_Level__c</field>
            <value>
                <elementReference>$Record.Access_Level__c</elementReference>
            </value>
        </inputAssignments>
        <object>Access_Consent__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Account</name>
        <label>Update Account</label>
        <locationX>1634</locationX>
        <locationY>924</locationY>
        <connector>
            <targetReference>Get_Account_record_with_Same_Email</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Throw_exception</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Account.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>BillingCity</field>
            <value>
                <elementReference>$Record.City</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingCountry</field>
            <value>
                <elementReference>$Record.Country</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingCountryCode</field>
            <value>
                <elementReference>$Record.CountryCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingPostalCode</field>
            <value>
                <elementReference>$Record.PostalCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingState</field>
            <value>
                <elementReference>$Record.State</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingStateCode</field>
            <value>
                <elementReference>$Record.StateCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingStreet</field>
            <value>
                <elementReference>$Record.Street</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PersonMobilePhone</field>
            <value>
                <elementReference>$Record.MobilePhone</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PersonTitle</field>
            <value>
                <elementReference>$Record.Title</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Phone</field>
            <value>
                <elementReference>$Record.Phone</elementReference>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <recordUpdates>
        <description>Update Account</description>
        <name>Update_Account_on_preferred_Name_cond</name>
        <label>Update Account on preferred Name cond</label>
        <locationX>578</locationX>
        <locationY>924</locationY>
        <connector>
            <targetReference>Get_Account_record_with_Same_Email</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Throw_exception</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Account.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>BillingCity</field>
            <value>
                <elementReference>$Record.City</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingCountry</field>
            <value>
                <elementReference>$Record.Country</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingCountryCode</field>
            <value>
                <elementReference>$Record.CountryCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingPostalCode</field>
            <value>
                <elementReference>$Record.PostalCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingState</field>
            <value>
                <elementReference>$Record.State</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingStateCode</field>
            <value>
                <elementReference>$Record.StateCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingStreet</field>
            <value>
                <elementReference>$Record.Street</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>FirstName</field>
            <value>
                <elementReference>$Record.FirstName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>LastName</field>
            <value>
                <elementReference>$Record.LastName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PersonMobilePhone</field>
            <value>
                <elementReference>$Record.MobilePhone</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PersonTitle</field>
            <value>
                <elementReference>$Record.Title</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Phone</field>
            <value>
                <elementReference>$Record.Spouse_Phone__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Preferred_Name__pc</field>
            <value>
                <elementReference>$Record.Preferred_Name__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Spouse_Email__pc</field>
            <value>
                <elementReference>$Record.Spouse_Email__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Spouse_First_Name__pc</field>
            <value>
                <elementReference>$Record.Spouse_First_Name__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Spouse_Last_Name__pc</field>
            <value>
                <elementReference>$Record.Spouse_Last_Name__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Spouse_Phone__pc</field>
            <value>
                <elementReference>$Record.Spouse_Phone__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Spouse_Preferred_Name__c</field>
            <value>
                <elementReference>$Record.Spouse_Preferred_Name__c</elementReference>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Account_on_Spouse_cond</name>
        <label>Update Account on Spouse cond</label>
        <locationX>1106</locationX>
        <locationY>924</locationY>
        <connector>
            <targetReference>Get_Account_record_with_Same_Email</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Throw_exception</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Account.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>BillingCity</field>
            <value>
                <elementReference>$Record.City</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingCountry</field>
            <value>
                <elementReference>$Record.Country</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingCountryCode</field>
            <value>
                <elementReference>$Record.CountryCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingPostalCode</field>
            <value>
                <elementReference>$Record.PostalCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingState</field>
            <value>
                <elementReference>$Record.State</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingStateCode</field>
            <value>
                <elementReference>$Record.StateCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingStreet</field>
            <value>
                <elementReference>$Record.Street</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>FirstName</field>
            <value>
                <elementReference>$Record.FirstName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>LastName</field>
            <value>
                <elementReference>$Record.LastName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PersonMobilePhone</field>
            <value>
                <elementReference>$Record.MobilePhone</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PersonTitle</field>
            <value>
                <elementReference>$Record.Title</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Phone</field>
            <value>
                <elementReference>$Record.Spouse_Phone__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Spouse_Email__pc</field>
            <value>
                <elementReference>$Record.Spouse_Email__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Spouse_First_Name__pc</field>
            <value>
                <elementReference>$Record.Spouse_First_Name__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Spouse_Last_Name__pc</field>
            <value>
                <elementReference>$Record.Spouse_Last_Name__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Spouse_Phone__pc</field>
            <value>
                <elementReference>$Record.Spouse_Phone__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Spouse_Preferred_Name__c</field>
            <value>
                <elementReference>$Record.Spouse_Preferred_Name__c</elementReference>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_account_record</name>
        <label>Update account record</label>
        <locationX>1766</locationX>
        <locationY>1656</locationY>
        <connector>
            <targetReference>Update_Access_Consent_record</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Throw_exception</targetReference>
        </faultConnector>
        <filterLogic>1 AND 6 AND (2 OR 3 OR 4 OR 5 OR 7 OR 8 OR 9 OR 10 OR 11 OR 12 )</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Account_record_with_Same_Email.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>FirstName</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Spouse_First_Name__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>LastName</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Spouse_Last_Name__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Primary_Email__pc</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Spouse_Email__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Phone</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Spouse_Phone__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsPersonAccount</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Preferred_Name__pc</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Spouse_Preferred_Name__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Spouse_Email__pc</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Email</elementReference>
            </value>
        </filters>
        <filters>
            <field>Spouse_First_Name__pc</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.FirstName</elementReference>
            </value>
        </filters>
        <filters>
            <field>Spouse_Last_Name__pc</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.LastName</elementReference>
            </value>
        </filters>
        <filters>
            <field>Spouse_Phone__pc</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Phone</elementReference>
            </value>
        </filters>
        <filters>
            <field>Spouse_Preferred_Name__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Preferred_Name__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>FirstName</field>
            <value>
                <elementReference>$Record.Spouse_First_Name__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>IsMarried__pc</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>LastName</field>
            <value>
                <elementReference>$Record.Spouse_Last_Name__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Phone</field>
            <value>
                <elementReference>$Record.Spouse_Phone__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Preferred_Name__pc</field>
            <value>
                <elementReference>$Record.Spouse_Preferred_Name__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Spouse_Email__pc</field>
            <value>
                <elementReference>$Record.Email</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Spouse_First_Name__pc</field>
            <value>
                <elementReference>$Record.FirstName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Spouse_Last_Name__pc</field>
            <value>
                <elementReference>$Record.LastName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Spouse_Phone__pc</field>
            <value>
                <elementReference>$Record.Phone</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Spouse_Preferred_Name__c</field>
            <value>
                <elementReference>$Record.Preferred_Name__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Spouse__pc</field>
            <value>
                <elementReference>Account.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Assignee_with_Spouse_ID</name>
        <label>Update Assignee with Spouse ID</label>
        <locationX>2294</locationX>
        <locationY>1764</locationY>
        <connector>
            <targetReference>Update_Access_Consent_record</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Throw_exception</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>IsMarried__pc</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Spouse__pc</field>
            <value>
                <elementReference>New_Spouse_Account_ID</elementReference>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <recordUpdates>
        <description>Update Contact Record for Client Portal User.</description>
        <name>Update_Contact_Record</name>
        <label>Update Contact Record</label>
        <locationX>50</locationX>
        <locationY>492</locationY>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Throw_exception</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ContactId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Email</field>
            <value>
                <elementReference>$Record.Email</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>FirstName</field>
            <value>
                <elementReference>$Record.FirstName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>LastName</field>
            <value>
                <elementReference>$Record.LastName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MailingCity</field>
            <value>
                <elementReference>$Record.City</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MailingCountry</field>
            <value>
                <elementReference>$Record.Country</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MailingCountryCode</field>
            <value>
                <elementReference>$Record.CountryCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MailingPostalCode</field>
            <value>
                <elementReference>$Record.PostalCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MailingState</field>
            <value>
                <elementReference>$Record.State</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MailingStateCode</field>
            <value>
                <elementReference>$Record.StateCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MailingStreet</field>
            <value>
                <elementReference>$Record.Street</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MiddleName</field>
            <value>
                <elementReference>$Record.MiddleName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MobilePhone</field>
            <value>
                <elementReference>$Record.MobilePhone</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Phone</field>
            <value>
                <elementReference>$Record.Phone</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Preferred_Name__c</field>
            <value>
                <elementReference>$Record.Preferred_Name__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Title</field>
            <value>
                <elementReference>$Record.Title</elementReference>
            </value>
        </inputAssignments>
        <object>Contact</object>
    </recordUpdates>
    <recordUpdates>
        <name>update_record_while_Email_Change</name>
        <label>update record while Email Change</label>
        <locationX>974</locationX>
        <locationY>1656</locationY>
        <connector>
            <targetReference>Update_Access_Consent_record</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Throw_exception</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Account.Spouse__pc</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>FirstName</field>
            <value>
                <elementReference>$Record.Spouse_First_Name__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>LastName</field>
            <value>
                <elementReference>$Record.Spouse_Last_Name__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Phone</field>
            <value>
                <elementReference>$Record.Spouse_Phone__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Preferred_Name__pc</field>
            <value>
                <elementReference>$Record.Spouse_Preferred_Name__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Primary_Email__pc</field>
            <value>
                <elementReference>$Record.Spouse_Email__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Spouse_Email__pc</field>
            <value>
                <elementReference>$Record.Email</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Spouse_First_Name__pc</field>
            <value>
                <elementReference>$Record.FirstName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Spouse_Last_Name__pc</field>
            <value>
                <elementReference>$Record.LastName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Spouse_Phone__pc</field>
            <value>
                <elementReference>$Record.Phone</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Spouse_Preferred_Name__c</field>
            <value>
                <elementReference>$Record.Preferred_Name__c</elementReference>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <start>
        <locationX>105</locationX>
        <locationY>0</locationY>
        <object>User</object>
        <recordTriggerType>Update</recordTriggerType>
        <scheduledPaths>
            <name>Synchronus_path</name>
            <connector>
                <targetReference>check_record_type</targetReference>
            </connector>
            <label>Synchronus path</label>
            <offsetNumber>1</offsetNumber>
            <offsetUnit>Minutes</offsetUnit>
            <recordField>LastModifiedDate</recordField>
            <timeSource>RecordField</timeSource>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>listofAccount</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>listofContactRecords</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Contact</objectType>
    </variables>
    <variables>
        <name>New_Spouse_Account_ID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
