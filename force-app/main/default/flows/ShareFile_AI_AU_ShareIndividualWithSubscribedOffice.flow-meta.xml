<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>64.0</apiVersion>
    <assignments>
        <name>Assign_ClearPotentialShareRow</name>
        <label>Assign_ClearPotentialShareRow</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>varPotentialAccountShareRowToCreate</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <connector>
            <targetReference>DEC_HasSubscribedOfficeLinked</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_PotentialCoordinatingShareRowToDelete</name>
        <label>Assign_PotentialCoordinatingShareRowToDelete</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>varPotentialAccountShareRowToDelete.AccountId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record__Prior.Individual__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varPotentialAccountShareRowToDelete.UserOrGroupId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record__Prior.Subscribed_Office__r.Account__r.RelatedGroupId__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varPotentialAccountShareRowToDelete.AccountAccessLevel</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Read</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varPotentialAccountShareRowToDelete.RowCause</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Manual</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varPotentialAccountShareRowCollectionToDelete</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>varPotentialAccountShareRowToDelete</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCountPotentialShareRowsToDelete</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SFL_AssessAccountShareRowsToDelete</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_PotentialSubscribedOfficeShareRow</name>
        <label>Assign_PotentialSubscribedOfficeShareRow</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>varPotentialAccountShareRowToCreate.AccountId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Individual__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varPotentialAccountShareRowToCreate.UserOrGroupId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Subscribed_Office__r.Account__r.RelatedGroupId__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varPotentialAccountShareRowToCreate.AccountAccessLevel</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Read</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varPotentialAccountShareRowToCreate.RowCause</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Manual</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varPotentialAccountShareRowToCreate.OpportunityAccessLevel</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>None</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varPotentialAccountShareRowCollectionToCreate</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>varPotentialAccountShareRowToCreate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varPotentialShareRowsToCreate</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>DEC_HasAtLeast1RowToAssessCreating</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>DEC_HasAtLeast1RowToAssessCreating</name>
        <label>DEC_HasAtLeast1RowToAssessCreating?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>DEC_HasShareRowsToCreate</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>NotAtLeast1RowToAssessCreating</defaultConnectorLabel>
        <rules>
            <name>HasAtLeast1RowToAssessCreating</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varPotentialShareRowsToCreate</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GET_ExistingShareRecordsBeforeInsert</targetReference>
            </connector>
            <label>HasAtLeast1RowToAssessCreating</label>
        </rules>
    </decisions>
    <decisions>
        <name>DEC_HasAtLeastOneOtherAceFile</name>
        <label>DEC_HasAtLeastOneOtherAceFile?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>GET_ExistingShareRecordsBeforeDelete</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>NotAtLeastOneOtherAceFile</defaultConnectorLabel>
        <rules>
            <name>HasAtLeastOneOtherAceFile</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GET_OtherShareFilesLinkedSameSubscribedOffice.Id</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_ClearPotentialShareRow</targetReference>
            </connector>
            <label>HasAtLeastOneOtherAceFile</label>
        </rules>
    </decisions>
    <decisions>
        <name>DEC_HasIsActiveFlowTrue</name>
        <label>DEC_HasIsActiveFlowTrue?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>NotIsActiveFlowTrue</defaultConnectorLabel>
        <rules>
            <name>HasIsActiveFlowTrue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GET_DisableAutomation.IsActiveFlow__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>DEC_HasWhichState</targetReference>
            </connector>
            <label>HasIsActiveFlowTrue</label>
        </rules>
    </decisions>
    <decisions>
        <name>DEC_HasShareRowsToCreate</name>
        <label>DEC_HasShareRowsToCreate?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>NoShareFileRecordsToCreate</defaultConnectorLabel>
        <rules>
            <name>HasShareRowsToCreate</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SFL_AssessNewAccountShareRowsToCreate.varCountShareFileRecordsToCreate</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CREATE_ShareRecords</targetReference>
            </connector>
            <label>HasShareRowsToCreate</label>
        </rules>
    </decisions>
    <decisions>
        <name>DEC_HasShareRowsToDelete</name>
        <label>DEC_HasShareRowsToDelete?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>Assign_ClearPotentialShareRow</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>NoShareRowsToDelete</defaultConnectorLabel>
        <rules>
            <name>HasShareRowsToDelete</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SFL_AssessAccountShareRowsToDelete.varCountAccountShareRecordsToDelete</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>DELETE_ShareRows</targetReference>
            </connector>
            <label>HasShareRowsToDelete</label>
        </rules>
    </decisions>
    <decisions>
        <name>DEC_HasSubscribedOfficeLinked</name>
        <label>DEC_HasSubscribedOfficeLinked?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>DEC_HasAtLeast1RowToAssessCreating</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>NoSubscribedOffice</defaultConnectorLabel>
        <rules>
            <name>HasSubscribedOfficeWithRelatedGroupIDLinked</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Subscribed_Office__r.Account__r.RelatedGroupId__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_PotentialSubscribedOfficeShareRow</targetReference>
            </connector>
            <label>HasSubscribedOfficeWithRelatedGroupIDLinked</label>
        </rules>
    </decisions>
    <decisions>
        <name>DEC_HasWhichState</name>
        <label>DEC_HasWhichState?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>NotChangedIndividualOrOffice</defaultConnectorLabel>
        <rules>
            <name>HasNullToPopulatedSubscribedOfficeOrInd</name>
            <conditionLogic>(1 AND 2) OR (3 AND 4)</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.Subscribed_Office__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subscribed_Office__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Individual__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Individual__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_ClearPotentialShareRow</targetReference>
            </connector>
            <label>HasNullToPopulatedSubscribedOfficeOrInd</label>
        </rules>
        <rules>
            <name>HasPopulatedButChangedIndividualOrOffice</name>
            <conditionLogic>(1 AND 2 AND 3)OR (4 AND 5 AND 6)</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.Subscribed_Office__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subscribed_Office__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Subscribed_Office__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Subscribed_Office__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Individual__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Individual__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Individual__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Individual__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GET_OtherShareFilesLinkedSameSubscribedOffice</targetReference>
            </connector>
            <label>HasPopulatedButChangedIndividualOrOffice</label>
        </rules>
        <rules>
            <name>HasPopulatedIndividualOrOfficeToNull</name>
            <conditionLogic>(1 AND 2) OR (3 AND 4)</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.Subscribed_Office__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subscribed_Office__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Individual__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Individual__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <isGoTo>true</isGoTo>
                <targetReference>GET_OtherShareFilesLinkedSameSubscribedOffice</targetReference>
            </connector>
            <label>HasPopulatedIndividualOrOfficeToNull</label>
        </rules>
    </decisions>
    <description>Record-triggered flow on Share File that fires after save to share an Individual record with the Subscribed office where applicable.</description>
    <environments>Default</environments>
    <interviewLabel>ShareFile_AI_AU_ShareIndividualWithSubscribedOffice {!$Flow.CurrentDateTime}</interviewLabel>
    <label>ShareFile_AI_AU_ShareIndividualWithSubscribedOffice</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>CREATE_ShareRecords</name>
        <label>CREATE_ShareRecords</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>SFL_CreateLog</targetReference>
        </faultConnector>
        <inputReference>SFL_AssessNewAccountShareRowsToCreate.varAccountShareRecordCollectionToCreate</inputReference>
    </recordCreates>
    <recordDeletes>
        <name>DELETE_ShareRows</name>
        <label>DELETE_ShareRows</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Assign_ClearPotentialShareRow</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>SFL_CreateLog</targetReference>
        </faultConnector>
        <inputReference>SFL_AssessAccountShareRowsToDelete.varAccountShareRecordsToDelete</inputReference>
    </recordDeletes>
    <recordLookups>
        <name>GET_DisableAutomation</name>
        <label>GET_DisableAutomation</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>DEC_HasIsActiveFlowTrue</targetReference>
        </connector>
        <faultConnector>
            <targetReference>SFL_CreateLog</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>APIObjectName__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ace_File__c</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>DisableAutomation__mdt</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>IsActiveFlow__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GET_ExistingShareRecordsBeforeDelete</name>
        <label>GET_ExistingShareRecordsBeforeDelete</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_PotentialCoordinatingShareRowToDelete</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>SFL_CreateLog</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record__Prior.Individual__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsDeleted</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record__Prior.Subscribed_Office__r.Account__r.RelatedGroupId__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>AccountShare</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>AccountAccessLevel</queriedFields>
        <queriedFields>AccountId</queriedFields>
        <queriedFields>RowCause</queriedFields>
        <queriedFields>UserOrGroupId</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GET_ExistingShareRecordsBeforeInsert</name>
        <label>GET_ExistingShareRecordsBeforeInsert</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SFL_AssessNewAccountShareRowsToCreate</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>SFL_CreateLog</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Individual__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsDeleted</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>AccountShare</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>AccountId</queriedFields>
        <queriedFields>RowCause</queriedFields>
        <queriedFields>UserOrGroupId</queriedFields>
        <queriedFields>AccountAccessLevel</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GET_OtherShareFilesLinkedSameSubscribedOffice</name>
        <label>GET_OtherShareFilesLinkedSameSubscribedOffice</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>DEC_HasAtLeastOneOtherAceFile</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>SFL_CreateLog</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Individual__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record__Prior.Individual__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Subscribed_Office__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record__Prior.Subscribed_Office__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ace_File__c</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GET_DisableAutomation</targetReference>
        </connector>
        <filterFormula>AND(ISBLANK({!$Record.Engagement__c}),
         ISBLANK({!$Record.Work_Record__c}),
         OR(
                AND(ISNEW(),
                         NOT(ISBLANK({!$Record.Individual__c})),
                         NOT(ISBLANK({!$Record.Subscribed_Office__c}))
                        ),
                 OR(ISCHANGED({!$Record.Subscribed_Office__c}),
                       ISCHANGED({!$Record.Individual__c})
                        )
               )
)</filterFormula>
        <object>ace_File__c</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <subflows>
        <name>SFL_AssessAccountShareRowsToDelete</name>
        <label>SFL_AssessAccountShareRowsToDelete</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>DEC_HasShareRowsToDelete</targetReference>
        </connector>
        <flowName>SFL_AssessAccountShareRowsToDelete</flowName>
        <inputAssignments>
            <name>recordId</name>
            <value>
                <elementReference>$Record__Prior.Individual__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varExistingAccountShareRecords</name>
            <value>
                <elementReference>GET_ExistingShareRecordsBeforeDelete</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varPotentialAccountShareRowRecords</name>
            <value>
                <elementReference>varPotentialAccountShareRowCollectionToDelete</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <name>SFL_AssessNewAccountShareRowsToCreate</name>
        <label>SFL_AssessNewAccountShareRowsToCreate</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>DEC_HasShareRowsToCreate</targetReference>
        </connector>
        <flowName>SFL_AssessNewAccountShareRowsToCreate</flowName>
        <inputAssignments>
            <name>recordId</name>
            <value>
                <elementReference>$Record.Individual__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varExistingAccountShareRecords</name>
            <value>
                <elementReference>GET_ExistingShareRecordsBeforeInsert</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varPotentialAccountShareRowRecords</name>
            <value>
                <elementReference>varPotentialAccountShareRowCollectionToCreate</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <name>SFL_CreateLog</name>
        <label>SFL_CreateLog</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <flowName>SFL_CreateLog</flowName>
        <inputAssignments>
            <name>varFlowAPIName</name>
            <value>
                <stringValue>ShareFile_AI_AU_ShareIndividualWithSubscribedOffice</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varFlowFaultMessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varRecordId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <variables>
        <name>currentItem_FILTER_ExistingCoordinatingShareRow</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ace_File__Share</objectType>
    </variables>
    <variables>
        <name>varCoordinatingOfficeGroupId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varCountExistingCoordinatingShareRow</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>varCountPotentialShareRowsToDelete</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>varEngagementCoordinatingGroupId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varPotentialAccountShareRowCollectionToCreate</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>AccountShare</objectType>
    </variables>
    <variables>
        <name>varPotentialAccountShareRowCollectionToDelete</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>AccountShare</objectType>
    </variables>
    <variables>
        <name>varPotentialAccountShareRowToCreate</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>AccountShare</objectType>
    </variables>
    <variables>
        <name>varPotentialAccountShareRowToDelete</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>AccountShare</objectType>
    </variables>
    <variables>
        <name>varPotentialShareRowsToCreate</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
</Flow>
